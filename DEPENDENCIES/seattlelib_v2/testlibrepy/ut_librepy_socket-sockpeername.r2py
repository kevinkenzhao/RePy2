"""
This unit test checks the getpeername() and getsockname()
methods of the RepySocket.
"""
#pragma repy restrictions.threeports dylink.r2py librepy.r2py

def incoming(remoteip, remoteport, sock, thiscommhandle, listencommhandle):
  # Check the names
  if sock.getsockname() != (ip, listen_port):
    log("Server socket name is not correct! Got:", sock.getsockname(), "\n")
  if sock.getpeername() != (ip, client_port):
    log("Server's peer name is not correct! Got:", sock.getpeername(), "\n")
  sock.close()


# Get the IP, and some ports
ip = getmyip()
free_ports = libsocket.get_connports(ip)
listen_port = free_ports[0]
client_port = free_ports[1]

# Setup a listener
stop_func = waitforconn(ip, listen_port, incoming)

# Connect now
s = openconn(ip, listen_port, localip=ip, localport=client_port)

# Check everything
if s.getsockname() != (ip, client_port):
  log("Client socket name is not correct! Got:", s.getsockname(), "\n")

if s.getpeername() != (ip, listen_port):
  log("Client's peer name is not correct! Got:", s.getpeername(), "\n")

# Close and cleanup
s.close()
stop_func()

